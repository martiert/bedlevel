import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useState } from 'react'
import dynamic from 'next/dynamic'

const DynamicPlot = dynamic(import('../components/plot'), {
  ssr: false
})

async function auto_home() {
  await fetch('/api/v1/autohome', { method: 'POST' })
}

async function set_temperature(temp) {
  await fetch(`/api/v1/temp/${temp}`, { method: 'POST' })
}

async function get_corners() {
  const result = await fetch('/api/v1/corners')
  return await result.json()
}

async function sample_points(x, y) {
  const result = await fetch(`/api/v1/points/${x}/${y}`)
  return await result.json()
}

export default function Home() {
  const [active, set_active] = useState(false)
  const [temp, set_temp] = useState(20)
  const [data, set_data] = useState(null)
  const [num_x_points, set_x_points] = useState(10)
  const [num_y_points, set_y_points] = useState(10)

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <button
          disabled={active}
          onClick={async () => {
            set_active(true)
            await auto_home()
            set_active(false)
          }}>Auto home</button>
        
        <input
          type="number"
          min="0"
          max="100"
          name="temperature"
          default={temp}
          onChange={(e) => set_temp(e.target.valueAsNumber)}
        />
        <button
          disabled={active}
          onClick={async () => {
            set_active(true)
            await set_temperature(temp)
            set_active(false)
          }}>Set Temperature</button>

        <button
          disabled={active}
          onClick={async () => {
            set_active(true)
            set_data(await get_corners())
            set_active(false)
          }}>Get corner values</button>

        <input
          type="number"
          min="0"
          max="20"
          name="x_points"
          default={num_x_points}
          onChange={(e) => set_x_points(e.target.valueAsNumber)}
        />
        <input
          type="number"
          min="0"
          max="20"
          name="y_points"
          default={num_y_points}
          onChange={(e) => set_y_points(e.target.valueAsNumber)}
        />
        <button
          disabled={active}
          onClick={async () => {
            set_active(true)
            set_data(await sample_points(num_x_points, num_y_points))
            set_active(false)
          }}>Start test</button>

        {
          data === null ? null :
            <DynamicPlot
              data={[
                {
                  x: data.x,
                  y: data.y,
                  z: data.z,
                  type: "heatmap",
                }]}
              layout={{width: 500, height: 500, title: 'Print Bed'}}
            />
        }
      </main>
    </div>
  )
}
